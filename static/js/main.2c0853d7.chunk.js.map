{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c0853d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__25Wrv\",\"card\":\"Cards_card__3nAnD\",\"infected\":\"Cards_infected__1rde8\",\"recovered\":\"Cards_recovered__393U1\",\"deaths\":\"Cards_deaths__4Eg1k\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n\tif (!confirmed) {\r\n\t\treturn 'Loading...';\r\n\t}\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tInfected\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tRecovered\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tDeaths\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\tlet changeableUrl = url;\r\n\r\n\tif (country) {\r\n\t\tchangeableUrl = `${url}/countries/${country}`;\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: {confirmed, recovered, deaths, lastUpdate},\r\n\t\t} = await axios.get(changeableUrl);\r\n\r\n\t\tconst modifiedData = {confirmed, recovered, deaths, lastUpdate};\r\n\r\n\t\treturn modifiedData;\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst {data} = await axios.get(`${url}/daily`);\r\n\t\tconst modifiedData = data.map((dailyData) => ({\r\n\t\t\tconfirmed: dailyData.confirmed.total,\r\n\t\t\tdeaths: dailyData.deaths.total,\r\n\t\t\tdate: dailyData.reportDate,\r\n\t\t}));\r\n\t\treturn modifiedData;\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: {countries},\r\n\t\t} = await axios.get(`${url}/countries`);\r\n\t\treturn countries.map((country) => country.name);\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\r\n\tconst [dailyData, setDailyData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\tconst lineChart = dailyData.length ? (\r\n\t\t<Line\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: dailyData.map(({date}) => date),\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({confirmed}) => confirmed),\r\n\t\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\t\tborderColor: '#ffc433',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({deaths}) => deaths),\r\n\t\t\t\t\t\tlabel: 'Deaths',\r\n\t\t\t\t\t\tborderColor: '#ff3333',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(255,0,0,0.5)',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\tconst barChart = confirmed ? (\r\n\t\t<Bar\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: ['Infected', 'Recovered', 'Deaths'],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'People',\r\n\t\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t\t'rgba(255, 196,0, 0.5)',\r\n\t\t\t\t\t\t\t'rgba(0, 255, 0, 0.5)',\r\n\t\t\t\t\t\t\t'rgba(255, 0, 0, 0.5)',\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t\toptions={{\r\n\t\t\t\tlegend: {display: false},\r\n\t\t\t\ttitle: {display: true, text: `Current state in ${country}`},\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\treturn <div className={styles.container}>{country ? barChart : lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetFetchedCountries(await fetchCountries());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, [setFetchedCountries]);\r\n\r\n\treturn (\r\n\t\t<FormControl className={styles.formControl}>\r\n\t\t\t<NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t{fetchedCountries.map((country, i) => (\r\n\t\t\t\t\t<option key={i} value={country}>\r\n\t\t\t\t\t\t{country}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nclass App extends React.Component {\r\n\tstate = {\r\n\t\tdata: {},\r\n\t\tcountry: '',\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst fetchedData = await fetchData();\r\n\r\n\t\tthis.setState({data: fetchedData});\r\n\t}\r\n\r\n\thandleCountryChange = async (country) => {\r\n\t\tconst fetchedData = await fetchData(country);\r\n\r\n\t\tthis.setState({data: fetchedData, country: country});\r\n\t};\r\n\trender() {\r\n\t\tconst {data, country} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t<h1 className={styles.title}>COVID-19 TRACKER</h1>\r\n\t\t\t\t<Cards data={data} />\r\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\r\n\t\t\t\t<Chart data={data} country={country} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__EKaEW\",\"title\":\"App_title__2BcyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2GBUn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3qsEG\"};"],"sourceRoot":""}